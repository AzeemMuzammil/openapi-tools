openapi: "3.0.0"
info:
  version: 1.0.0
  title: OpenApi Petstore
  license:
    name: MIT
servers:
  - url: http://petstore.{host}.io/v1
    description: The production API server
    variables:
      host:
        default: openapi
        description: this value is assigned by the service provider
  - url: https://{subdomain}.swagger.io:{port}/{basePath}
    description: The production API server
    variables:
      subdomain:
        default: petstore
        description: this value is assigned by the service provider
      port:
        enum:
          - '8443'
          - '443'
        default: '443'
      basePath:
        default: v2
tags:
  - name: pets
    description: Pets Tag
  - name: list
    description: List Tag

paths:
  /pets/management:
    get:
      operationId: getPetInfo
      summary: Info for a specific pet
      tags:
        - pets
      parameters:
        - name: petId
          in: query
          required: true
          description: The id of the pet to retrieve
          schema:
            type: string
        - name: headerX
          in: header
          required: true
          description: Header X
          schema:
            type: string
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pet"
      security:
        - oAuth2Password: []
    delete:
      operationId: deletePetInfo
      summary: Delete a pet
      tags:
        - pets
      parameters:
        - name: petId
          in: query
          required: true
          description: The id of the pet to delete
          schema:
            type: string
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pet"
      security:
        - oAuth2Password: []
    post:
      operationId: votePet
      summary: Vote for a pet
      tags:
        - pets
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pet"
      security:
        - oAuth2Password: []
  /pets/management2:
    delete:
      operationId: deletePetInfo2
      summary: Delete a pet 2
      tags:
        - pets
      parameters:
        - name: petId
          in: header
          required: true
          description: The id of the pet to delete
          schema:
            type: string
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pet"
      security:
        - oAuth2Password: []
components:
  schemas:
    Pet:
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        tag:
          type: string
        type:
          type: string
  securitySchemes:
    oAuth2Password:
      type: oauth2
      flows: 
        password:
          tokenUrl: https://test.salesforce.com/services/oauth2/token
          scopes: {}
