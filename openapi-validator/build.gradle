/*
 * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */

//apply from: "$rootDir/gradle/javaProjectWithExtBalo.gradle"
//apply from: "$rootDir/gradle/javaProject.gradle"
apply plugin: 'com.github.johnrengelman.shadow'
//apply plugin: 'java'
//apply from: "$rootDir/gradle/baseNativeStdLibProject.gradle"
description = 'Ballerina - OpenAPI - Validator'

configurations.all {
    resolutionStrategy.preferProjectModules()
}


dependencies {
//    annotationProcessor  group: 'org.ballerinalang', name: 'ballerina-lang', version: "${ballerinaLangVersion}"
    implementation 'io.swagger.parser.v3:swagger-parser'

    implementation group: 'org.ballerinalang', name: 'ballerina-lang', version: "${ballerinaLangVersion}"
    implementation group: 'org.ballerinalang', name: 'ballerina-runtime', version: "${ballerinaLangVersion}"
    implementation group: 'org.ballerinalang', name: 'ballerina-runtime-api', version: "${ballerinaLangVersion}"
    implementation group: 'org.slf4j', name: 'slf4j-jdk14', version: "${slf4jVersion}"
//    compile group: 'com.rabbitmq', name: 'amqp-client', version: "${amqpVersion}"
    implementation group: 'org.ballerinalang', name: 'ballerina-runtime', version: "${ballerinaLangVersion}"
    implementation group: 'org.ballerinalang', name: 'ballerina-tool', version: "${ballerinaLangVersion}"
    implementation group: 'org.ballerinalang', name: 'ballerina-http', version: "${ballerinaLangVersion}"
    implementation group: 'org.ballerinalang', name: 'ballerina-crypto', version: "${ballerinaLangVersion}"
    implementation group: 'org.ballerinalang', name: 'ballerina-java', version: "${ballerinaLangVersion}"
    implementation group: 'org.ballerinalang', name: 'ballerina-time', version: "${ballerinaLangVersion}"
    implementation group: 'org.ballerinalang', name: 'ballerina-system', version: "${ballerinaLangVersion}"
    implementation group: 'org.ballerinalang', name: 'ballerina-io', version: "${ballerinaLangVersion}"
    implementation group: 'org.ballerinalang', name: 'value', version: "${ballerinaLangVersion}"
    implementation group: 'org.ballerinalang', name: 'typedesc', version: "${ballerinaLangVersion}"
    implementation group: 'org.ballerinalang', name: 'annotations', version: "${ballerinaLangVersion}"
    implementation group: 'org.ballerinalang', name: 'toml-parser', version: "${ballerinaTomlParserVersion}"

    // Standard libs
    implementation group: 'org.ballerinalang', name: 'ballerina-lang', version: "${ballerinaLangVersion}"
    testCompile 'org.testng:testng'

    implementation group: 'org.ballerinalang', name: 'ballerina-test-utils', version: "${ballerinaLangVersion}"
    testImplementation group: 'org.ballerinalang', name: 'ballerina-test-utils', version: "${ballerinaLangVersion}"
//    testCompile group: 'org.wso2.ballerinalang', name: 'compiler', version: "${ballerinaLangVersion}"
}

clean {
    delete "$project.projectDir/target"
    delete "$project.projectDir/Ballerina.lock"
}

jar {
    enabled = false
    dependsOn(shadowJar { classifier = null })
}

clean {
    delete "$project.projectDir/target"
    delete "$project.projectDir/Ballerina.lock"
}

jar {
    enabled = false
    dependsOn(shadowJar { classifier = null })
}

shadowJar {
    configurations = [project.configurations.runtimeClasspath]
    dependencies {
        include(dependency('commons-io:commons-io'))
        include(dependency('javax.validation:validation-api'))
        include(dependency('io.swagger:swagger-core'))
        include(dependency('io.swagger:swagger-models'))
        include(dependency('io.swagger:swagger-parser'))
        include(dependency('io.swagger.core.v3:swagger-core'))
        include(dependency('io.swagger.core.v3:swagger-models'))
        include(dependency('io.swagger.parser.v3:swagger-parser'))
        include(dependency('io.swagger.parser.v3:swagger-parser-core'))
        include(dependency('io.swagger.parser.v3:swagger-parser-v2-converter'))
        include(dependency('io.swagger.parser.v3:swagger-parser-v3'))
        include(dependency('com.google.code.gson:gson'))
        include(dependency('org.wso2.ballerinalang:ballerina-lang:compiler'))
        exclude('META-INF/*.SF')
        exclude('META-INF/*.DSA')
        exclude('META-INF/*.RSA')
    }
}

test {
    useTestNG() {
        suites 'src/test/resources/testng.xml'
    }
}

//publishing {
//    publications {
//        mavenJava(MavenPublication) {
//            groupId project.group
//            artifactId "openapi-validator"
//            version = project.version
//            artifact jar
//        }
//    }
//
//    repositories {
//        maven {
//            name = "GitHubPackages"
//            url = uri("https://github.com/ballerina-platform/ballerina-openapi")
//            credentials {
//                username = System.getenv("packageUser")
//                password = System.getenv("packagePAT")
//            }
//        }
//    }
//}