/*
 * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */

//apply from: "$rootDir/gradle/javaProjectWithExtBalo.gradle"
//apply from: "$rootDir/gradle/baseNativeStdLibProject.gradle"

apply from: "$rootDir/gradle/javaProject.gradle"

apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'java'
description = 'Ballerina - OpenAPI - Validator'

configurations.all {
    resolutionStrategy {
        preferProjectModules()
    }
}

configurations {
    balTools
}

dependencies {
    implementation ("io.swagger.parser.v3:swagger-parser") {
        exclude group: "io.swagger", module: "swagger-compat-spec-parser"
        exclude group: "org.slf4j", module: "slf4j-ext"
        exclude group: "javax.validation", module: "validation-api"
    }
    implementation "org.ballerinalang:ballerina-lang"
    implementation "org.ballerinalang:ballerina-tools-api"
    testImplementation "org.testng:testng"

    balTools("org.ballerinalang:jballerina-tools:${ballerinaLangVersion}") {
        transitive = false
    }
}

def bDistribution = file("$project.buildDir/extracted-distribution/jballerina-tools-${ballerinaLangVersion}")
task jBallerinaPack {
    doLast {
        configurations.balTools.resolvedConfiguration.resolvedArtifacts.each { artifact ->
            copy {
                from project.zipTree(artifact.getFile())
                into new File(project.buildDir, "extracted-distribution/")
            }
        }
    }
    outputs.dir bDistribution
}

clean {
    delete "$project.projectDir/target"
    delete "$project.projectDir/Ballerina.lock"
}

jar {
    enabled = false
    dependsOn(shadowJar { classifier = null })
}

shadowJar {
    configurations = [project.configurations.runtimeClasspath]
    dependencies {
        include(dependency('commons-io:commons-io'))
        include(dependency('javax.validation:validation-api'))
        include(dependency('io.swagger.parser.v3:swagger-parser'))
        include(dependency('com.google.code.gson:gson'))
        exclude('META-INF/*.SF')
        exclude('META-INF/*.DSA')
        exclude('META-INF/*.RSA')
    }
}

test {
    dependsOn {
        jBallerinaPack
    }
    systemProperty "ballerina.home", bDistribution
    useTestNG() {
        suites 'src/test/resources/testng.xml'
    }
}

//publishing {
//    publications {
//        mavenJava(MavenPublication) {
//            groupId project.group
//            artifactId "openapi-validator"
//            version = project.version
//            artifact jar
//        }
//    }
//
//    repositories {
//        maven {
//            name = "GitHubPackages"
//            url = uri("https://github.com/ballerina-platform/ballerina-openapi")
//            credentials {
//                username = System.getenv("packageUser")
//                password = System.getenv("packagePAT")
//            }
//        }
//    }
//}


compileJava {
    doFirst {
        options.compilerArgs = [
                '--module-path', classpath.asPath,
        ]
        classpath = files()
    }
}
